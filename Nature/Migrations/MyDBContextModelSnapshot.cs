// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nature.Database;

#nullable disable

namespace Nature.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Nature.model.Accounts", b =>
                {
                    b.Property<int>("playerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("playerid"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Online")
                        .HasColumnType("int");

                    b.Property<int>("adminLevel")
                        .HasColumnType("int");

                    b.Property<bool>("ban")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("banReason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ulong>("hardwareId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("playerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("resetToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ulong>("socialClub")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("whitelisted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("playerid");

                    b.ToTable("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
